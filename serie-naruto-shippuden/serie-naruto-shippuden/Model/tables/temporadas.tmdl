table temporadas

	column 'Número Temporada'
		dataType: int64
		formatString: 0
		summarizeBy: none
		sourceColumn: Número Temporada

		annotation SummarizationSetBy = Automatic

	column Temporada
		dataType: string
		summarizeBy: none
		sourceColumn: Temporada

		annotation SummarizationSetBy = Automatic

	column Descripción
		dataType: string
		summarizeBy: none
		sourceColumn: Descripción

		annotation SummarizationSetBy = Automatic

	column 'Url Portada'
		dataType: string
		summarizeBy: none
		sourceColumn: Url Portada

		annotation SummarizationSetBy = Automatic

	column 'Nombre Completo Temporada'
		dataType: string
		summarizeBy: none
		sourceColumn: Nombre Completo Temporada
		sortByColumn: 'Número Temporada'

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	partition temporadas = m
		mode: import
		queryGroup: Dimensiónes
		source =
				let
				    Origen = Csv.Document(File.Contents(url_bd),[Delimiter=",", Columns=9, Encoding=1252, QuoteStyle=QuoteStyle.None]),
				    #"Encabezados promovidos" = Table.PromoteHeaders(Origen, [PromoteAllScalars=true]),
				    #"Tipo cambiado" = Table.TransformColumnTypes(#"Encabezados promovidos",{{"", Int64.Type}, {"Num_episode", Int64.Type}, {"Title", type text}, {"Type", type text}, {"Year_launch", Int64.Type}, {"Rate", Int64.Type}, {"Votes", Int64.Type}, {"Saga", type text}, {"Airdate", type date}}),
				    #"Otras columnas quitadas" = Table.SelectColumns(#"Tipo cambiado",{"Saga"}),
				    #"Duplicados quitados" = Table.Distinct(#"Otras columnas quitadas"),
				    #"Dividir columna por: transición de caracteres" = Table.SplitColumn(#"Duplicados quitados", "Saga", Splitter.SplitTextByCharacterTransition({"0".."9"}, (c) => not List.Contains({"0".."9"}, c)), {"Saga.1", "Saga.2"}),
				    #"Valor reemplazado" = Table.ReplaceValue(#"Dividir columna por: transición de caracteres","s","",Replacer.ReplaceText,{"Saga.1"}),
				    #"Dividir columna por posiciones" = Table.SplitColumn(#"Valor reemplazado", "Saga.2", Splitter.SplitTextByPositions({0}), {"Saga.2.1"}),
				    #"Dividir columna por posiciones1" = Table.SplitColumn(#"Dividir columna por posiciones", "Saga.2.1", Splitter.SplitTextByPositions({1}), {"Saga.2.1.1"}),
				    #"Tipo cambiado1" = Table.TransformColumnTypes(#"Dividir columna por posiciones1",{{"Saga.2.1.1", type text}}),
				    #"Columnas con nombre cambiado" = Table.RenameColumns(#"Tipo cambiado1",{{"Saga.1", "Número Temporada"}, {"Saga.2.1.1", "Temporada"}}),
				    #"Tipo cambiado2" = Table.TransformColumnTypes(#"Columnas con nombre cambiado",{{"Número Temporada", Int64.Type}}),
				    #"Personalizada agregada" = Table.AddColumn(#"Tipo cambiado2", "DatoTMDB", each obtenerDatosTmdb([Número Temporada])),
				    #"Se expandió DatoTMDB" = Table.ExpandRecordColumn(#"Personalizada agregada", "DatoTMDB", {"Url Portada", "Descripción"}, {"Url Portada", "Descripción"}),
				    #"Columnas reordenadas" = Table.ReorderColumns(#"Se expandió DatoTMDB",{"Número Temporada", "Temporada", "Descripción", "Url Portada"}),
				    #"Personalizada agregada1" = Table.AddColumn(#"Columnas reordenadas", "Nombre Completo Temporada", each if [Temporada] <> null then "Temporada " & Text.From([Número Temporada]) &" - " & [Temporada] else "Temporada " & Text.From([Número Temporada])),
				    #"Columnas reordenadas1" = Table.ReorderColumns(#"Personalizada agregada1",{"Número Temporada", "Temporada", "Nombre Completo Temporada", "Descripción", "Url Portada"})
				in
				    #"Columnas reordenadas1"

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Table

